In this test we do some linting based on a config.

Let's create some files.

  $ cat > dune-project <<EOF
  > (lang dune 3.17)
  > 
  > (name my_project_name)
  > EOF

  $ cat > dune <<EOF
  > (library
  >  (name mylib)
  >  (libraries a b c))
  > EOF

  $ mkdir -p _build

  $ cat > _build/dune-project <<EOF
  > (lang dune 3.17)
  > 
  > (name ignored_because_in_build)
  > EOF

  $ mkdir -p vendor

  $ cat > vendor/dune-project <<EOF
  > (lang dune 3.17)
  > 
  > (name my_vendor_project_name)
  > EOF

Currently the behavior of the lint-file command is to not load config files on
its own. See below how the name of the project is not linted:

  $ dunolint lint --yes

If the config is supplied, but it is invalid, dunolint will complain.

  $ printf '(blah)\n' > .dunolint

  $ dunolint lint --yes --config .dunolint
  File ".dunolint", line 1, characters 1-5:
  1 | (blah)
       ^^^^
  Error: config_v0.T: record conversion: only pairs expected, their first
  element must be an atom
  [123]

Unsupported config versions are reported with a located error message.

  $ printf '((version 101101)(blah))\n' > .dunolint

  $ dunolint lint --yes --config .dunolint
  File ".dunolint", line 1, characters 10-16:
  1 | ((version 101101)(blah))
                ^^^^^^
  Error: Unsupported dunolint config version [101101].
  [123]

If there are no rules, the linting will succeed but does nothing in this case.

  $ printf '((rules ()))\n' > .dunolint

  $ dunolint lint --yes --config .dunolint

Now let's load a config. To make it easier to write in this test, we're
generating an actual config from an OCaml file.

  $ ./lint_file_config_gen.exe > .dunolint

  $ cat .dunolint
  ;; This file is generated by [bin/lint_file_gen_config.ml]. Do not edit!
  ((skip_subtree (cond (((path (glob .git/*)) skip_subtree))))
   (rules
    ((cond
      (((path (glob vendor/*)) return)
       (true (enforce (dune_project (name (equals foo)))))))
     (cond (((path (glob _build/*)) skip_subtree))))))

Let's lint with this config.

  $ dunolint lint --yes --config .dunolint
  Editing file "dune-project":
  -1,3 +1,3
    (lang dune 3.17)
    
  -|(name my_project_name)
  +|(name foo)
